let form = document.querySelector('form');
let inputForm = document.querySelector('.input-form');
let shoppingList = document.querySelector('.shopping-list');
let shoppingListMain = document.querySelector('.shopping-list__main');
let shoppingListFooter = document.querySelector('.shopping-list__footer');
let noteCounter = 0;
let localStorage = window.localStorage;
let noteArray = [];

let firstLetter = (str) => str.split('')[0].toUpperCase() + str.slice(1)

form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (inputForm.value === '') {
        inputForm.classList.add('error')
    } else {
        inputForm.classList.remove('error')
        if (noteCounter === 0) {
            shoppingListMain.classList.remove('d-none');
            shoppingListFooter.classList.remove('d-none');
        }
        addNote(firstLetter(inputForm.value.trim()));
        inputForm.value = '';
    }
})

function addNote(noteText,isChecked = false) {
    noteCounter++;
    const note = document.createElement('div');
    note.className = 'note';
    note.innerHTML = `
    <label>
        <input type="checkbox" class="note__checkbox visually-hidden" id="${noteCounter}" ${isChecked ? 'checked' : ''}>
        <span class="note__custom-checkbox"></span>
        <p class="note__text ${isChecked ? 'checked' : ''}">${noteText}</p>
        <input class="note__input d-none" type="text" value = '${noteText}'>
    </label>
    <div class="note__button-container">
        <button class="note__edit-btn">‚úèÔ∏è</button>
        <button class="note__delete-btn">üóë</button>
    </div>
    `
    shoppingListMain.append(note)

    noteArray.push({text: noteText, id: noteCounter, isChecked: isChecked})
    localStorage.setItem('notes', JSON.stringify(noteArray))
}

if(localStorage.notes) {
    shoppingListMain.classList.remove('d-none');
    shoppingListFooter.classList.remove('d-none');
    let localStorageArray = JSON.parse(localStorage.notes.split(','))
    for(let el of localStorageArray) {
        addNote(el.text, el.isChecked);
    }
}
let isEdited = false;
shoppingList.addEventListener('click', function(e) {
    if(e.target.classList.contains('note__checkbox' || 'note__custom-checkbox' || 'note__text')){
        let id = e.target.closest('.note').querySelector('.note__checkbox').getAttribute('id');
        e.target.closest('.note').querySelector('.note__text').classList.toggle('checked');
        e.target.closest('.note').querySelector('.note__checkbox').checked ? checkNote(id) : uncheckNote(id);
    } else if (e.target.classList.contains('note__delete-btn')){ // –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ —É—Ä–Ω—É
        let id = e.target.closest('.note').querySelector('.note__checkbox').getAttribute('id');
        deleteNote(id, localStorage);
        e.target.closest('.note').remove(); // —É–¥–∞–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ
        isLast(localStorage); // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ
    } else if (e.target.classList.contains('delete-block__delete-checked')){ // –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ —É–¥–∞–ª–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
        let checkboxes = document.querySelectorAll('.note__checkbox');
        for (el of checkboxes) {
            if (el.checked) {
             el.closest('.note').remove()
            }
        }
        deleteChecked(localStorage);
        isLast(localStorage); // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ
    } else if (e.target.classList.contains('delete-block__delete-all')){ // –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ
        deleteAll(shoppingListMain)
    } else if (e.target.classList.contains('note__edit-btn') && isEdited === true) {
        console.log('–ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å 2 –∑–∞–ø–∏—Å–∏ —Å—Ä–∞–∑—É');
    } else if (e.target.classList.contains('note__edit-btn') && isEdited === false) {
        let id = e.target.closest('.note').querySelector('.note__checkbox').getAttribute('id');
        let editButton = e.target.closest('.note').querySelector('.note__edit-btn');
        let noteText = e.target.closest('.note').querySelector('.note__text');
        let noteInput = e.target.closest('.note').querySelector('.note__input');
        isEdited = true;
        editButton.innerHTML = '‚úÖ';
        noteText.classList.add('d-none');
        noteInput.classList.remove('d-none');
        if (editButton.innerHTML === '‚úÖ') {
            noteInput.onkeypress = function(e) { // —Ä–∞–±–æ—Ç–∞–µ—Ç
                let key = e.which || e.keyCode
                if (key === 13) {
                    if(noteInput.value.trim() === '') {
                        noteInput.classList.add('error')
                    } else {
                        editNote(id, firstLetter(noteInput.value.trim()));
                        noteText.innerHTML = firstLetter(noteInput.value.trim());
                        editButton.innerHTML = '‚úèÔ∏è';
                        noteText.classList.remove('d-none');
                        noteInput.classList.add('d-none');
                        isEdited = false
                    }
                }
            }
            // editButton.addEventListener('click', function() { // –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑-–∑–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å—Ç—Ä 79
            // if(noteInput.value.trim() === '') {
            //     noteInput.classList.add('error')
            // } else {
            //     editNote(id, firstLetter(noteInput.value.trim()));
            //     noteText.innerHTML = firstLetter(noteInput.value.trim());
            //     editButton.innerHTML = '‚úèÔ∏è';
            //     noteText.classList.remove('d-none');
            //     noteInput.classList.add('d-none');
            // isEdited = false

            // }
            // })
        }
    }
})

function checkNote(id) { // –¥–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    for (obj of noteArray) {
        if (obj.id === +id) {
            obj.isChecked = true;
            localStorage.setItem('notes', JSON.stringify(noteArray))
        }
    }
}
function uncheckNote(id) { // —Å–Ω–∏–º–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    for (obj of noteArray) {
        if (obj.id === +id) {
            obj.isChecked = false;
            localStorage.setItem('notes', JSON.stringify(noteArray))
        }
    }
}
function deleteNote(id, localStorage) { // —É–¥–∞–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ –ø–æ –∫—Ä–µ—Å—Ç–∏–∫—É
    for (obj of noteArray) {
        if (obj.id === +id) {
            noteArray.splice(noteArray.indexOf(obj), 1)
            localStorage.setItem('notes', JSON.stringify(noteArray))
        }
    }
}
function isLast(localStorage) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–∏ —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ –∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –ø–æ–ª–µ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏
    if (noteArray.length === 0) {
        shoppingListMain.classList.add('d-none');
        shoppingListFooter.classList.add('d-none');
        localStorage.clear();
        noteCounter = 0
    }
}
function deleteChecked(localStorage) { // —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É –Ω–µ "isChecked = true"
    noteArray = noteArray.filter(el => !el.isChecked)
    localStorage.setItem('notes', JSON.stringify(noteArray))
}
function deleteAll(notes) { // —É–¥–∞–ª—è–µ–º —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Å–µ –∑–∞–ø–∏—Å–∏
    notes.innerHTML = '';
    noteCounter = 0;
    localStorage.clear();
    noteArray = [];
    shoppingListMain.classList.add('d-none');
    shoppingListFooter.classList.add('d-none');
}
function editNote(id, value) {
    for (obj of noteArray) {
        if(obj.id === +id) {
            obj.text = value;
            localStorage.setItem('notes', JSON.stringify(noteArray))
        }
    }
}